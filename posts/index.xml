<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Martin Kanters - Tech blog</title><link>https://martinkanters.dev/posts/</link><description>Recent content in Posts on Martin Kanters - Tech blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 29 Jul 2021 21:08:00 +0200</lastBuildDate><atom:link href="https://martinkanters.dev/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Advanced Maven Reactor use cases</title><link>https://martinkanters.dev/advanced-maven-reactor-use-cases/</link><pubDate>Thu, 29 Jul 2021 21:08:00 +0200</pubDate><guid>https://martinkanters.dev/advanced-maven-reactor-use-cases/</guid><description>For all folks using Maven, and especially those who use multi module projects, Maven 4 will be a treat for you. I had the opportunity to work together with @mthmulders on several issues and bug fixes around the Maven reactor. The reactor is the backbone of multi module projects in Maven. Most of the things you need to know about the reactor are documented here. In this article I would like to show you the real advanced use cases.</description></item><item><title>Automatic zero-maintenance Chocolatey package builds</title><link>https://martinkanters.dev/automatic-zero-maintenance-chocolatey-package-builds/</link><pubDate>Wed, 30 Jun 2021 20:14:00 +0200</pubDate><guid>https://martinkanters.dev/automatic-zero-maintenance-chocolatey-package-builds/</guid><description>One of the important things of contributing to Open Source software is trying out bleeding edge builds. For instance, while working on the new major release of Apache Maven, I want to make use of it in my regular day job. A process which easily installs the latest master build automatically would be convenient to have. My friend and colleague @mthmulders made a homebrew package for it. Unfortunately, as I&amp;rsquo;m currently on Windows, that does not help me.</description></item><item><title>Extending Kubernetes with Metacontroller</title><link>https://martinkanters.dev/extending-kubernetes-with-metacontroller/</link><pubDate>Sun, 30 May 2021 15:51:00 +0200</pubDate><guid>https://martinkanters.dev/extending-kubernetes-with-metacontroller/</guid><description>Kubernetes is great for many reasons. It is very good for orchestrating workload over multiple nodes in a cluster. But I think that the extensibility of it is what makes Kubernetes so powerful. This gives us endless possibilities.
Kubernetes controllers As said in the intro, Kubernetes is a platform for orchestrating containerized workloads across a cluster. One of the key components of the cluster is the control plane. The control plane contains components which ensures that Kubernetes actualizes the &amp;ldquo;desired state&amp;rdquo;.</description></item><item><title>GitOps: Storing secrets safely in Git</title><link>https://martinkanters.dev/gitops-storing-secrets-safely-in-git/</link><pubDate>Sat, 06 Feb 2021 16:05:00 +0200</pubDate><guid>https://martinkanters.dev/gitops-storing-secrets-safely-in-git/</guid><description>Secret management in IT is a complex problem. Secrets should be stored safely, versioned and easy to use. The least amount of people should be able to manage or even see them. This article explains how to solve this problem using encryption in a GitOps fashion.
External secrets vault Letâ€™s look at two techniques often used for secret management. Most of the time they are stored in external services, such as Hashicorp Vault.</description></item><item><title>An introduction of containerization in IT pt. 2</title><link>https://martinkanters.dev/an-introduction-of-containerization-in-it-part2/</link><pubDate>Tue, 19 May 2020 21:57:00 +0200</pubDate><guid>https://martinkanters.dev/an-introduction-of-containerization-in-it-part2/</guid><description>In the last part we learned about many typical use cases of containers in IT. We will continue with how to manage many of these containers together using the popular orchestrating tool, Kubernetes.
Kubernetes Kubernetes can be installed on one server or multiple servers in a cluster. As a client you tell the server what you want the cluster to look like, also known as the desired state. Kubernetes will try its best to make it that way, and keep it that way.</description></item><item><title>An introduction of containerization in IT pt. 1</title><link>https://martinkanters.dev/an-introduction-of-containerization-in-it-part1/</link><pubDate>Tue, 19 May 2020 21:56:00 +0200</pubDate><guid>https://martinkanters.dev/an-introduction-of-containerization-in-it-part1/</guid><description>Containers are relatively new in IT and are here to stay. In this article I would like to give an introduction of containerization. I hope to explain some use cases and workings by explaining the current most popular platforms in high-level.
Why containerization? It is not uncommon for companies to have big servers running many different applications. Typically they run many business critical services next to their databases. Every application requires certain frameworks and tooling to be installed.</description></item></channel></rss>